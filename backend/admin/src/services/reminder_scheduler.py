import datetime

from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.interval import IntervalTrigger

from schemas.entity import HistoryCreate
from services.telegram_bot import TelegramBot
from db.db_engine import DBEngine
from utils.pagination import PaginatedParams  # –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é
from core.settings import settings
import logging

logger = logging.getLogger(__name__)


def start_scheduler(
    bot: TelegramBot,
    db_engine: DBEngine,
):
    scheduler = AsyncIOScheduler()
    scheduler.add_job(
        notify_inactive_users,
        IntervalTrigger(minutes=settings.reminder_polling_interval_in_minutes),  # TODO –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —á–∞—Å
        # IntervalTrigger(hours=1),
        kwargs={"bot": bot, "db_engine": db_engine},
        name="notify_inactive_users",
    )
    scheduler.start()


async def notify_inactive_users(bot: TelegramBot, db_engine: DBEngine):
    logger.info("üîî –ó–∞–ø—É—â–µ–Ω–∞ –∑–∞–¥–∞—á–∞ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

    users = await db_engine.get_long_time_lost_users(
        days_count=10, pagination=PaginatedParams(page_size=1000, page_number=1)
    )
    if not users:
        logger.info("No long time lost users")

    root_node = (  # –∫–æ—Ä–µ–Ω—å –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —Ç–æ—Ç –µ–≥–æ –ø–æ—Å–º–æ—Ç—Ä–µ–ª
        await db_engine.get_menu_root()
    )  # –Ω–µ –∑–Ω–∞—é –Ω–∞–¥–æ –ª–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –µ—Å—Ç—å –ª–∏ –∫–æ—Ä–µ–Ω—å

    for user in users:
        try:
            await bot.send_message(
                user_id=int(user.id),
                text="–ü—Ä–∏–≤–µ—Ç! –ú—ã –¥–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏ —Ç–≤–æ–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è! üòä",
            )
            await db_engine.create_history_record(
                user_id=user.id,
                history_data=HistoryCreate(
                    menu_id=root_node.id, action_date=datetime.datetime.now()
                ),
            )  # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —á–µ—Ä–µ–∑ —á–∞—Å –µ–º—É –æ–ø—è—Ç—å –Ω–µ –ø—Ä–∏—à–ª–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}: {e}")
