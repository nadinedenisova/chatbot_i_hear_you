services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/site.conf:/etc/nginx/conf.d/site.conf:ro
    ports:
      - "80:80"
    depends_on:
      - admin

  admin-redis-db:
    image: redis:latest
    container_name: admin-redis-db
    volumes:
      - admin_redis_db_data:/data
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  admin-postgres-db:
    image: postgres:latest
    container_name: admin-postgres-db
    restart: always
    volumes:
      - admin_postgres_db_data:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  admin:
    build: admin
    container_name: admin
    env_file:
      - ./.env
    expose:
      - "8000"
    volumes:
      - ./uploaded_content:/opt/admin/src/uploads
    environment:
      - PYTHONUNBUFFERED=1
      - FASTAPI_RELOAD=1
    depends_on:
      admin-redis-db:
        condition: service_healthy
      admin-postgres-db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./admin/src
          target: /opt/admin/src

  admin-tests:
    build:
      context: ./admin
      dockerfile: Dockerfile tests
    container_name: admin-tests
    env_file:
      - ./.env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      admin-redis-db:
        condition: service_healthy
      admin-postgres-db:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./admin/src
          target: /opt/admin/src

   bot:
     build: bot
     container_name: bot
     env_file:
       - ./.env
     volumes:
       - ./uploaded_content:/opt/bot/uploads
     environment:
       - PYTHONUNBUFFERED=1
     develop:
       watch:
         - action: sync+restart
           path: ./bot/src
           target: /opt/bot/src

volumes:
  admin_redis_db_data:
  admin_postgres_db_data:
