services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/site.conf:/etc/nginx/conf.d/site.conf:ro
    ports:
      - "80:80"
    depends_on:
      - api

  api-redis-db:
    image: redis:latest
    container_name: api-redis-db
    volumes:
      - api_redis_db_data:/data
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api-postgres-db:
    image: postgres:latest
    container_name: api-postgres-db
    restart: always
    volumes:
      - api_postgres_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: api
    container_name: api
    env_file:
      - ./.env
    expose:
      - "8080"
    environment:
      - PYTHONUNBUFFERED=1
      - FASTAPI_RELOAD=1
    depends_on:
      api-redis-db:
        condition: service_healthy
      api-postgres-db:
        condition: service_healthy

  bot:
    build: bot
    container_name: bot
    env_file:
      - ./.env
    environment:
      - PYTHONUNBUFFERED=1

volumes:
  api_redis_db_data:
  api_postgres_db_data:
